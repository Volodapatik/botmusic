import re
import os
import logging
import telebot
import yt_dlp
from threading import Thread
from flask import Flask

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.environ['TELEGRAM_BOT_TOKEN']
bot = telebot.TeleBot(TOKEN, parse_mode=None)

# –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–µ —Ç–∞–π–º–∞—É—Ç—ã –¥–ª—è –¥–ª–∏–Ω–Ω—ã—Ö —Ç—Ä–µ–∫–æ–≤
import telebot.apihelper
telebot.apihelper.CONNECT_TIMEOUT = 60
telebot.apihelper.READ_TIMEOUT = 600  # 10 –º–∏–Ω—É—Ç –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–∞–π–ª–∞

# Flask –¥–ª—è –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞
app = Flask(__name__)

@app.route('/')
def home():
    return "üéµ YouTube Music Bot is running! Send /start to bot in Telegram"

@app.route('/health')
def health():
    return "OK"

def extract_youtube_url(text):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç YouTube URL –∏–∑ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    youtube_regex = (
        r'(https?://)?(www\.)?'
        r'(youtube|youtu|youtube-nocookie)\.(com|be)/'
        r'(watch\?v=|embed/|v/|shorts/|.+[?&]v=)?([^&=%\?]{11})'
    )
    match = re.search(youtube_regex, text)
    if match:
        video_id = match.group(6)
        return f"https://youtu.be/{video_id}"
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤ —Å—Å—ã–ª–æ–∫
    patterns = [
        r'youtu\.be/([^&=%\?]{11})',
        r'youtube\.com/watch\?v=([^&=%\?]{11})',
        r'youtube\.com/embed/([^&=%\?]{11})',
        r'youtube\.com/v/([^&=%\?]{11})',
        r'youtube\.com/shorts/([^&=%\?]{11})'  # ‚Üê –î–û–ë–ê–í–¨ –ó–ê–ü–Ø–¢–£–Æ –ó–î–ï–°–¨!
    ]
    
    for pattern in patterns:
        match = re.search(pattern, text)
        if match:
            video_id = match.group(1)
            return f"https://youtu.be/{video_id}"
    
    return None
    
def download_and_send_audio(chat_id, url):
    mp3_path = None
    filename = None
    try:
        bot.send_message(chat_id, f"üéµ –ù–∞—á–∏–Ω–∞—é –æ–±—Ä–∞–±–æ—Ç–∫—É: {url}")

        # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É downloads
        os.makedirs("downloads", exist_ok=True)

        # –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∏–¥–µ–æ
        ydl_info_opts = {
            'quiet': True,
            'no_warnings': True,
            # üîß –ü–ê–†–ê–ú–ï–¢–†–´ –î–õ–Ø –û–ë–•–û–î–ê –ë–õ–û–ö–ò–†–û–í–ö–ò
            'extract_flat': False,
            'ignoreerrors': True,
            'no_check_certificate': True,
            'geo_bypass': True,
            'geo_bypass_country': 'US',
            'http_headers': {
                'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',
                'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
                'Accept-Language': 'en-us,en;q=0.5',
                'Accept-Encoding': 'gzip, deflate',
                'Connection': 'keep-alive',
            }
        }
        
        with yt_dlp.YoutubeDL(ydl_info_opts) as ydl:
    info = ydl.extract_info(url, download=False)
    
    # üîß –î–û–ë–ê–í–¨ –ü–†–û–í–ï–†–ö–£ –ù–ê None
    if info is None:
        bot.send_message(chat_id, "‚ùå YouTube –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –∑–∞–ø—Ä–æ—Å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é —Å—Å—ã–ª–∫—É –∏–ª–∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∑–∂–µ.")
        return
    
    duration = info.get('duration', 0)
    title = info.get('title', '–ê—É–¥–∏–æ')
        
        # –í—ã–±–∏—Ä–∞–µ–º –∫–∞—á–µ—Å—Ç–≤–æ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        if duration > 3600:  # > 1 —á–∞—Å
            quality = '96'
            bot.send_message(chat_id, f"‚è±Ô∏è –î–ª–∏–Ω–Ω—ã–π —Ç—Ä–µ–∫ ({duration//60} –º–∏–Ω). –ò—Å–ø–æ–ª—å–∑—É—é –∫–∞—á–µ—Å—Ç–≤–æ 96 kbps...")
        elif duration > 1800:  # > 30 –º–∏–Ω—É—Ç
            quality = '128'
            bot.send_message(chat_id, f"‚è±Ô∏è –¢—Ä–µ–∫ –Ω–∞ {duration//60} –º–∏–Ω—É—Ç. –ö–∞—á–µ—Å—Ç–≤–æ: 128 kbps")
        else:
            quality = '192'
        
        ydl_opts = {
            'format': 'bestaudio/best',
            'postprocessors': [{
                'key': 'FFmpegExtractAudio',
                'preferredcodec': 'mp3',
                'preferredquality': quality,
            }],
            'outtmpl': 'downloads/%(title)s.%(ext)s',
            'quiet': True,
            'no_warnings': True,
            # üîß –ü–ê–†–ê–ú–ï–¢–†–´ –î–õ–Ø –û–ë–•–û–î–ê –ë–õ–û–ö–ò–†–û–í–ö–ò
            'extract_flat': False,
            'ignoreerrors': True,
            'no_check_certificate': True,
            'geo_bypass': True,
            'geo_bypass_country': 'US',
            'http_headers': {
                'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',
                'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
                'Accept-Language': 'en-us,en;q=0.5',
                'Accept-Encoding': 'gzip, deflate',
                'Connection': 'keep-alive',
            }
        }

        bot.send_message(chat_id, "‚¨áÔ∏è –ó–∞–≥—Ä—É–∂–∞—é –∞—É–¥–∏–æ...")
        
        with yt_dlp.YoutubeDL(ydl_opts) as ydl:
            info = ydl.extract_info(url, download=True)
            filename = ydl.prepare_filename(info)
            mp3_path = os.path.splitext(filename)[0] + '.mp3'

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
        file_size = os.path.getsize(mp3_path) / (1024 * 1024)  # –≤ –ú–ë
        logger.info(f"–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size:.2f} –ú–ë")
        
        if file_size > 50:
            bot.send_message(chat_id, f"‚ö†Ô∏è –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π ({file_size:.1f} –ú–ë). Telegram –ª–∏–º–∏—Ç 50 –ú–ë. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –±–æ–ª–µ–µ –∫–æ—Ä–æ—Ç–∫–æ–µ –≤–∏–¥–µ–æ.")
            return

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –∞—É–¥–∏–æ —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º —Ç–∞–π–º–∞—É—Ç–æ–º
        bot.send_message(chat_id, f"üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é —Ñ–∞–π–ª ({file_size:.1f} –ú–ë)...")
        
        with open(mp3_path, 'rb') as audio_file:
            bot.send_audio(
                chat_id, 
                audio_file,
                title=title[:64],
                performer=info.get('uploader', 'Unknown')[:64],
                duration=duration,
                timeout=600
            )

        bot.send_message(chat_id, "‚úÖ –ì–æ—Ç–æ–≤–æ! –ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –º—É–∑—ã–∫–æ–π!")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ {url}: {str(e)}", exc_info=True)
        bot.send_message(chat_id, f"‚ùå –û—à–∏–±–∫–∞: {str(e)}\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–µ –≤–∏–¥–µ–æ.")
    
    finally:
        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        try:
            if mp3_path and os.path.exists(mp3_path):
                os.remove(mp3_path)
            if filename and os.path.exists(filename):
                os.remove(filename)
        except Exception as e:
            logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã: {e}")

@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.reply_to(message,
        "üé∂ –ü—Ä–∏–≤–µ—Ç! –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ YouTube –≤–∏–¥–µ–æ, "
        "–∏ —è –ø—Ä–µ–æ–±—Ä–∞–∑—É—é –µ–≥–æ –≤ MP3!\n\n"
        "–ü—Ä–∏–º–µ—Ä: https://youtu.be/3QqwjYC3EAg"
    )

@bot.message_handler(func=lambda message: True)
def handle_message(message):
    url = extract_youtube_url(message.text)
    if not url:
        bot.reply_to(message, "‚ùå –≠—Ç–æ –Ω–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ —Å—Å—ã–ª–∫—É YouTube. –ü—Ä–∏—à–ª–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É.")
        return

    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ —á—Ç–æ–±—ã –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç–∞
    thread = Thread(target=download_and_send_audio, args=(message.chat.id, url))
    thread.start()

def run_bot():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–º –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö"""
    logger.info("----- –ó–∞–ø—É—Å–∫ YouTube Music Bot –Ω–∞ Koyeb -----")
    while True:
        try:
            bot.infinity_polling(timeout=120, long_polling_timeout=120)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –±–æ—Ç–∞: {e}")
            import time
            time.sleep(10)
            logger.info("–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞...")

if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    bot_thread = Thread(target=run_bot)
    bot_thread.daemon = True
    bot_thread.start()

    # –ó–∞–ø—É—Å–∫–∞–µ–º Flask —Å–µ—Ä–≤–µ—Ä
    app.run(host='0.0.0.0', port=8000)


